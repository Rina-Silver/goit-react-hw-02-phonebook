{"version":3,"sources":["components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["Section","title","children","ContactForm","state","name","number","inputNameId","uuidv4","inputNumberId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","this","className","htmlFor","id","type","pattern","required","onChange","disabled","Component","Filter","filter","filtered","ContactItem","onDelete","onClick","ContactList","contacts","length","map","App","checkNameInBook","find","contact","formSubmitHandler","data","alert","newContact","prevState","onChangeFilter","trim","getVisibleContacts","normalizedFilter","toLowerCase","includes","removeContact","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a21efea0.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n    return (\r\n        <section>\r\n            {title && <h2>{title}</h2>} {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\n// import PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputNameId = uuidv4();\r\n  inputNumberId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"PhonebookForm\">\r\n        <label htmlFor={this.inputNameId}>Name</label>\r\n        <input\r\n          id={this.inputNameId}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor={this.inputNumberId}>Number</label>\r\n        <input\r\n          id={this.inputNumberId}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleChange}\r\n        />\r\n        <button\r\n          className=\"Phonebook__btn\"\r\n          type=\"submit\"\r\n          disabled={!name || !number}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ filter, filtered }) => {\r\n  const inputNameId = uuidv4();\r\n  return (\r\n    <>\r\n      <label htmlFor={inputNameId}>Find name</label>\r\n      <input\r\n        id={inputNameId}\r\n        name={filter}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={filtered}\r\n        className=\"inputFilter\"\r\n      ></input>{' '}\r\n    </>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  filtered: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        🙂{name} 📞{number}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n        className=\"Contact__btn\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return contacts.length > 0 ? (\r\n    <ul className=\"nameList\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"nameItem\" key={id}>\r\n          <ContactItem\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            onDelete={onDelete}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <>\r\n      <p>No contacts</p>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }).isRequired,\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  checkNameInBook = name => {\n    const { contacts } = this.state;\n    return contacts.find(contact => contact.name === name);\n  };\n\n  formSubmitHandler = data => {\n    if (this.checkNameInBook(data.name)) {\n      alert(`${data.name} is already in Contactbook!`);\n      return;\n    }\n    console.log(data);\n    const newContact = {\n      id: uuidv4(),\n      ...data,\n    };\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  onChangeFilter = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value.trim() });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  removeContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    //    const normalizedFilter = filter.toLowerCase();\n    //    const filteredContacts = contacts.filter(({ name }) =>\n    //      name.toLowerCase().includes(normalizedFilter),\n    //    );\n    const filteredContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"Container\">\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.formSubmitHandler} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter filter={filter} filtered={this.onChangeFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onDelete={this.removeContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}